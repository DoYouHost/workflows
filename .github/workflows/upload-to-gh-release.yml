name: Upload firmware to GitHub Release

on:
  workflow_call:
    inputs:
      version:
        description: Version of the release
        required: true
        type: string
      prerelease:
        description: Whether this is a prerelease
        required: false
        default: false
        type: boolean
    secrets:
      PAT_TOKEN:
        description: 'Optional Personal Access Token for creating releases'
        required: false

jobs:
  upload:
    name: Upload
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v5.0.0
        with:
          path: files

      - name: Copy files to output
        run: |
          set -e
          shopt -s nullglob
          mkdir output
          version='${{ inputs.version }}'
          echo "Listing files:"
          find files -maxdepth 3 -type f -print
          pushd files
          for device in *; do
            [ -d "$device" ] || continue
            pushd "$device"
            if [ "$device" != "$version" ]; then
              pushd "$version"
              output_path="../../../output/"
            else
              output_path="../../output/"
            fi
            cp manifest.json "${output_path}${device}.manifest.json"
            for bin in *.{bin,elf}; do
              [ -f "$bin" ] || continue
              md5sum "$bin" | head -c 32 > "${output_path}${bin}.md5"
              sha256sum "$bin" | head -c 64 > "${output_path}${bin}.sha256"
              cp "$bin" "${output_path}"
            done
            if [ "$device" != "$version" ]; then
              popd
            fi
            popd
          done
          popd
          echo "Output listing:"
          ls -la output
          echo "===================="

      - name: Upload files to release
        uses: softprops/action-gh-release@v2.3.2
        with:
          files: output/*
          tag_name: ${{ inputs.version }}
          draft: false
          prerelease: ${{ inputs.prerelease }}
          token: ${{ secrets.PAT_TOKEN || github.token }}